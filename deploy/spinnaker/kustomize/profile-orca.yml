apiVersion: spinnaker.armory.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker  # name doesn't matter since this is a patch
spec:
  # spec.spinnakerConfig - This section is how to specify configuration spinnaker
  spinnakerConfig:
    # spec.spinnakerConfig.profiles - This section contains the YAML of each service's profile
    profiles:
      orca:       # is the contents of ~/.hal/default/profiles/orca.yml
        # 2022-09-29 change to mysql
        # https://spinnaker.io/docs/setup/productionize/persistence/orca-sql/
        # https://docs.armory.io/armory-enterprise/armory-admin/orca-sql-configure/
        sql:
          enabled: true
          connectionPool:
            jdbcUrl: jdbc:mysql://christine-aurora-mysql.cluster-cddfke67dweh.us-east-2.rds.amazonaws.com:3306/orca?enabledTLSProtocols=TLSv1.2
            user: orca_service
            password: armory
            connectionTimeout: 5000
            maxLifetime: 30000
            maxPoolSize: 50
          migration:
            jdbcUrl: jdbc:mysql://christine-aurora-mysql.cluster-cddfke67dweh.us-east-2.rds.amazonaws.com:3306/orca?enabledTLSProtocols=TLSv1.2
            user: orca_migrate
            password: armory

        # Ensure we're only using SQL for accessing execution state
        executionRepository:
          sql:
            enabled: true
          redis:
            enabled: false
        # Reporting on active execution metrics will be handled by SQL
        monitor:
          activeExecutions:
            redis: false
        # Use SQL for Orca's work queue
        # Settings from Netflix and may require adjustment for your environment
        # Only validated with AWS Aurora MySQL 5.7
        # Please PR if you have success with other databases
        keiko:
          queue:
            sql:
              enabled: true
            redis:
              enabled: false
        queue:
          zombieCheck:
            enabled: true 
          pendingExecutionService:
            sql:
              enabled: true
            redis:
              enabled: false
        # orca-local.yml: | # 2022-08-17 No -local.yml any more since those for old halyard
        pollers:
          oldPipelineCleanup:
            enabled: true                  # This enables old pipeline execution cleanup (default: false)
            intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000 milliseconds)
            thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)
            minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)
        tasks:
          daysOfExecutionHistory: 180      # How many days to keep old task executions around
          # logging:
          #   level:
          #     com.netflix.spinnaker.orca: DEBUG
        # 2022-09-26 temporary close for orca cannot start
        # job:
        #   preconfigured:
        #     kubernetes:
        #       - label: PollingGiithubActionWorkflow
        #         type: pollingWorkflow
        #         description: Polling GitHub Action Workflow status
        #         cloudProvider: kubernetes
        #         account: christine-sa
        #         credentials: christine-sa
        #         waitForCompletion: true
        #         application: k8s2
        #         parameters:
        #           - name: owner
        #             label: Organization
        #             description: Organization for the git repository
        #             mapping: manifest.spec.template.spec.containers[0].env[0].value
        #             defaultValue: ChristineZhaoArmory
        #           - name: repo
        #             label: Repository
        #             description: Git repository name
        #             mapping: manifest.spec.template.spec.containers[0].env[1].value
        #             defaultValue: my_project
        #           - name: ref
        #             label: Reference
        #             description: The reference can be a branch, tag, or a commit SHA.
        #             mapping: manifest.spec.template.spec.containers[0].env[2].value
        #             defaultValue: main
        #           - name: JSONSPHRASE
        #             label: Jsons to merge
        #             description: Jsons to be merged.
        #             mapping: manifest.spec.template.spec.containers[0].env[0].value
        #             defaultValue: "Hello world!"
        #         manifest:
        #           apiVersion: batch/v1
        #           kind: Job
        #           metadata:
        #             name: polling-gha-workflow
        #             namespace: christine-zhao
        #           spec:
        #             backoffLimit: 0
        #             template:
        #               spec:
        #                 restartPolicy: Never
        #                 containers: 
        #                   - name: polling-gha-wf-status
        #                     image: alpine:latest
        #                     env:
        #                       - name: owner
        #                         value: placeholder
        #                       - name: repo
        #                         value: placeholder
        #                       - name: ref
        #                         value: placeholder
        #                     command: ["/bin/sh", "-c"]
        #                     args:
        #                     - echo "polling:" https://api.github.com/repos/$owner/$repo/dispatches;
        #                     - echo "write some logic ...";
        #       - label: MergerJson
        #         type: echoPhrase
        #         description: Merger Jsons with maximum values
        #         cloudProvider: kubernetes
        #         account: christine-sa
        #         credentials: christine-sa
        #         waitForCompletion: true
        #         application: k8s2
        #         parameters:
        #           - name: JSONSPHRASE
        #             label: Jsons to merge
        #             description: Jsons to be merged.
        #             mapping: manifest.spec.template.spec.containers[0].env[0].value
        #             defaultValue: "Hello world!"
        #         manifest:
        #           apiVersion: batch/v1
        #           kind: Job
        #           metadata:
        #             name: say-hello
        #             namespace: christine-zhao
        #           spec:
        #             backoffLimit: 0
        #             template:
        #               spec:
        #                 restartPolicy: Never
        #                 containers: 
        #                   - name: hello
        #                     image: alpine:latest
        #                     env:
        #                       - name: JSONSPHRASE
        #                         value: placeholder
        #                     command: ["/bin/sh", "-c"]
        #                     args:
        #                     - echo "JSONMERGED:" $JSONSPHRASE;
        # webhook:
        #   preconfigured:
        #   - label: GitHub Action Workflow Status
        #     type: githubWorkflowStatus
        #     enabled: true
        #     description: Get GitHub Action Workflow status
        #     method: GET
        #     url: https://api.github.com/repos/${parameterValues.organization}/${parameterValues.project}/statuses/${parameterValues.workflowId}
        #     waitForCompletion: true # can this be here?
        #     customHeaders:
        #       Authorization:
        #         - encrypted:s3!r:encryptedapikey
        #       Content-Type:
        #         - application/json
        #     parameters:
        #       - label: Organization
        #         name: organization
        #         description: Organization for the git repository
        #         defaultValue: something
        #       - label: Project
        #         name: project
        #         description: Git repository name
        #         defaultValue: ${ execution.application }
        #       - label: Workflow ID
        #         name: workflowId
        #         description: The workflow_id
        #         defaultValue: '35484811'
        #         type: string
          
        #   - label: Get GitHub Latest Release
        #     type: getGithubLatestRelease
        #     enabled: true
        #     description: Get GitHub Latest Release
        #     method: GET
        #     url: https://api.github.com/repos/${parameterValues.organization}/${parameterValues.project}/releases/latest
        #     customHeaders:
        #       Authorization:
        #         - encrypted:s3!r:encryptedapikey
        #       Content-Type:
        #         - application/json
        #     parameters:
        #       - label: Organization
        #         name: organization
        #         description: Organization for the git repository
        #         defaultValue: something
        #       - label: Project
        #         name: project
        #         description: Git repository name
        #         defaultValue: ${ execution.application }