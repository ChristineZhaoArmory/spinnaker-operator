apiVersion: spinnaker.armory.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker
spec:
  # spec.spinnakerConfig - This section is how to specify configuration spinnaker
  spinnakerConfig:
  # spec.spinnakerConfig.config - This section contains the contents of a deployment found in a halconfig .deploymentConfigurations[0]
    config:
      version: 2.27.4  # the version of Spinnaker to be deployed
                       # 2022-12-20 test 2.26.4 for SUPPORT-4871
                       # 2022-12-22 test 2.27.4 for SUPPORT-4891
      artifacts:
        # helm:
        #   enabled: true
        #   accounts:
        #     name: jfrog
        #     repository: https://charts.jfrog.io
        bitbucket:
          enabled: false
          accounts:
          # - name: bitbucket
          #   username: ChristineZhaoArmory
            # password:
            # token:
            # tokenFile:
            # usernamePasswordFile:
        gitrepo:
          enabled: true
          accounts:
            - name: AT_GitRepo
              username: ChristineZhaoArmory                # Git username.
              #token: encrypted:k8s!n:spin-secrets!k:github-token 
              token:  ghp_xxx  #2022-11-02 turn off
        github:
          enabled: true
          accounts:
            - name: AT_Github
              username: ChristineZhaoArmory                # Git username.
              #token: encrypted:k8s!n:spin-secrets!k:github-token
              token:  ghp_xxx  #2022-11-02 turn off
        # christine- 2022-06-13 have problem. Need check later
        s3:
          enabled: true
          accounts:
          - name: AT_S3
            region: us-east-2
          # - name: us_east_1_S3
          #   region: us-east-1
            # awsAccessKeyId: ASIA3ZQRIGO2ERDAOK6U
            # awsSecretAccessKey: encrypted:k8s!n:spin-secrets!k:aws-secret-key
      persistentStorage:
        persistentStoreType: s3
        s3:
          bucket: christine-zhao-s3
          rootFolder: front50
          region: us-east-2
      # security:
      #   apiSecurity:
      #     overrideBaseUrl: http://localhost:8084
      #   uiSecurity:
      #     overrideBaseUrl: http://localhost:9000
      security:
        apiSecurity:
          overrideBaseUrl: https://christine-spin-gate.tse-armory.io  # Specify your DNS name for Gate with https scheme
        uiSecurity:
          overrideBaseUrl: https://christine-spin-deck.tse-armory.io       # Specify your DNS name for Deck with https scheme
        authn:
          oauth2:
            enabled: true  # 2022-11-22 change from true to false to test saml
            client:
              clientId: f074440fd5b990f4aca0
              clientSecret: encrypted:s3!r:us-east-2!b:christine-zhao-s3!f:secret/spinnaker-secrets.yml!k:github.token
              userAuthorizationUri: https://github.com/login/oauth/authorize
              scope: user:org,user:email
              preEstablishedRedirectUri: https://christine-spin-gate.tse-armory.io/login
            provider: GITHUB
        # authz:             # 2022-12-15 does not work, need to check
        #   enabled: true
        #   groupMembership:
        #     github:
        #       accessToken:  ghp_xxx
        #       baseUrl: https://api.github.com
        #       organization: armory-io
        #       roleProviderType: GITHUB
        #     service: GITHUB
      providers:
        kubernetes:
          enabled: true
          accounts:
          - name: christine-sa
            #serviceAccount: true
            requiredGroupMembership: []
            providerVersion: V2
            permissions: {}  # 2022-12-15 changed
            # permissions:
            #   READ:
            #    - spin-admin
            #    - spin-read-only
            #   WRITE:
            #    - spin-admin
            #   EXECUTE:
            #    - spin-admin
            #   CREATE:
            #    - spin-admin
            dockerRegistries: []
            checkPermissionsOnStartup: true  # When false, clouddriver will skip the permission checks for all Kubernetes Kinds at startup. This can save a great deal of time during clouddriver startup when you have many Kubernetes accounts configured. This disables the log messages at startup about missing permissions.
            #liveManifestCalls: false         # When true, clouddriver will query manifest status during pipeline executions using live data rather than the cache. This eliminates all time spent in the “force cache refresh” task in pipelines, greatly reducing execution time. However, turning on this setting has known bugs: https://github.com/spinnaker/spinnaker/issues/5607
            configureImagePullSecrets: true
            cacheThreads: 1
            namespaces: []
            omitNamespaces: []
            kinds: []
            omitKinds: []
            customResources: []
            cachingPolicies: []
            oAuthScopes: []
            onlySpinnakerManaged: true
            rawResourcesEndpointConfig: # 2022-12-13 added for testing special image BOB-30889
              kindExpressions: []
              omitKindExpressions: []
            kubeconfigFile: encryptedFile:secrets-manager!r:us-east-2!s:christine-spin-secret

          # Account for some remote Kubernetes cluster using a kubeconfig file stored in a Kubernetes secret
          # 2023-01-06 test later
          # - name: spin-sa
          #   providerVersion: V2
          #   permissions: {}
          #   dockerRegistries: []
          #   cacheThreads: 1
          #   namespaces: []
          #   omitNamespaces: []
          #   kinds: []
          #   omitKinds: []
          #   customResources: []
          #   checkPermissionsOnStartup: true
          #   liveManifestCalls: false
          #   cachingPolicies: []
          #   oAuthScopes: []
          #   onlySpinnakerManaged: false
          #   kubeconfigFile: encryptedFile:k8s!n:spin-secrets-remote!k:kubecfg-remote # (Secret).

          primaryAccount: christine-sa
        # BEGIN 2022-08-15 close for removing exceptions
        aws:
          accounts:
          - accountId: '810711266228'
            providerVersion: V1
            name: christine-aws
            regions:
            - name: us-east-2
            - name: us-east-1
            - name: us-west-1
            - name: us-west-2
            assumeRole: role/aws-spin-support-managedrole
            permissions: {}
            # permissions:
            #   READ:
            #   - spin-admin
            #   WRITE:
            #   - spin-admin
            #   EXECUTE:
            #   - spin-admin
            #   CREATE:
            #   - spin-admin
            requiredGroupMembership: []
          bakeryDefaults:
            baseImages:
            - baseImage:
                detailedDescription: Debian 11 (HVM), SSD Volume Type
                id: debian
                shortDescription: v11
                packageType: deb
                # templateFile: aws-ebs.json
              virtualizationSettings:
              - instanceType: t2.micro
                region: us-west-2
                #sourceAmi: ami-071e6cafc48327ca2
                sourceAmi: ami-0b8db56f1634f78b5
                #spotPrice: “0”
                spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
                sshUserName: admin
                virtualizationType: hvm
              - instanceType: t2.micro
                region: us-east-2
                sourceAmi: ami-0b3e2bb9a70a08ad3
                #spotPrice: “0”
                spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
                sshUserName: admin
                virtualizationType: hvm
            # - baseImage:
            #     detailedDescription: Ubuntu Trusty Tahr v14.04
            #     id: trusty
            #     packageType: deb
            #     shortDescription: v14.04
            #   virtualizationSettings:
            #     - instanceType: t2.micro
            #       region: us-east-2
            #       sourceAmi: ami-b69abcd3
            #       sshUserName: ubuntu
            #       virtualizationType: hvm
          defaultKeyPairTemplate: ‘{{“{{“}}name{{“}}“}}-keypair’
          defaultRegions:
          - name: us-east-1
          - name: us-east-2
          - name: us-west-1
          - name: us-west-2
          defaults:
            iamRole: BaseIAMRole
          enabled: true
          features:
            cloudFormation:
              enabled: true
          primaryAccount: christine-aws
        # END 2022-08-15 close for removing exceptions
        ecs:
          enabled: true
          accounts:
          - name: christine-ecs
            requiredGroupMembership: []
            providerVersion: V1
            permissions: {}
            awsAccount: christine-aws                   # Must be one of the configured AWS accounts
          primaryAccount: christine-ecs            # Must be one of the configured AWS ECS accounts
      ci:
        jenkins:
          enabled: true
          masters:
          # - name: jenkins-master
          #   address: $YOUR_JENKINS_URL_HERE # The address your jenkins master is reachable at.
          #   username: $USERNAME    # The username of the jenkins user to authenticate as.
          #   password: $PASSWORD                # The password of the jenkins user to authenticate as. This field support "encrypted" secret references.
            - name: jenkins-master
              address: https://christine-jenkins.tse-armory.io/
              csrf: true
              password: admin
              username: admin
      # deploymentEnvironment:
      #   customSizing:
      #     echo:
      #       limits:
      #       #  cpu: 250m
      #       # memory: 512Mi
      #       # requests:
      #       #   cpu: 100m
      #       #   memory: 128Mi
      #     spin-clouddriver:
      #       replicas: 1
      #       limits:
      #         # cpu: 600m
      #       #  memory: 3Gi
      #       # requests:
      #       #   cpu: 250m
      #       #   memory: 512Mi
      #     clouddriver:
      #       limits:
      #         # cpu: 801m
      #       #  memory: 2Gi
      #       # requests:
      #       #   cpu: 250m
      #       #   memory: 512Mi
      # armory:
      #   terraform:
      #     enabled: true

        # christine- 2022-05-31 below is enable diagnostics and logging
        # https://docs.armory.io/armory-enterprise/armory-admin/observe/diagnostics-configure/
        # diagnostics:
        #   enabled:    true
        #   uuid:       # Enter uniquely Generated UUID
        #   logging:
        #     enabled:    # true/false to enable
        #     endpoint:   # Enter Endpoint, e.g. https://debug.armory.io/v1/logs
        # christine- 2022-05-31 above is enable diagnostics and logging